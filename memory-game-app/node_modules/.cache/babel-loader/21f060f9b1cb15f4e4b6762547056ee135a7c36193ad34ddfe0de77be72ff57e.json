{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Christin.Malunes\\\\OneDrive - Rio Tinto\\\\Documents\\\\GitHub\\\\Microsoft-devOps-day\\\\memory-game-app\\\\src\\\\pages\\\\MemoryGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport Card from '../components/Card';\nimport './MemoryGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemoryGame = ({\n  onGameComplete\n}) => {\n  _s();\n  const {\n    difficulty = 'Easy'\n  } = useParams();\n  // Game configuration based on difficulty\n  const gameConfig = {\n    'Easy': {\n      pairs: 6,\n      timeBonus: 100\n    },\n    'Medium': {\n      pairs: 8,\n      timeBonus: 150\n    },\n    'Hard': {\n      pairs: 10,\n      timeBonus: 200\n    }\n  };\n  const {\n    pairs,\n    timeBonus\n  } = gameConfig[difficulty];\n\n  // Emoji sets for cards\n  const cardEmojis = ['🌟', '🎯', '🚀', '🎨', '🏆', '💎', '🎪', '🎭', '🎸', '🎲', '🎊', '🎁', '🌈', '⚡', '🔥'];\n\n  // Game state\n  const [cards, setCards] = useState([]);\n  const [flippedCards, setFlippedCards] = useState([]);\n  const [matchedPairs, setMatchedPairs] = useState([]);\n  const [moves, setMoves] = useState(0);\n  const [score, setScore] = useState(0);\n  const [gameTime, setGameTime] = useState(0);\n  const [gameStatus, setGameStatus] = useState('playing'); // 'playing', 'paused', 'completed'\n  const [showCelebration, setShowCelebration] = useState(false);\n\n  // Initialize game\n  const initializeGame = useCallback(() => {\n    const selectedEmojis = cardEmojis.slice(0, pairs);\n    const gameCards = [...selectedEmojis, ...selectedEmojis].map((emoji, index) => ({\n      id: index,\n      emoji,\n      isFlipped: false,\n      isMatched: false\n    })).sort(() => Math.random() - 0.5); // Shuffle cards\n\n    setCards(gameCards);\n    setFlippedCards([]);\n    setMatchedPairs([]);\n    setMoves(0);\n    setScore(0);\n    setGameTime(0);\n    setGameStatus('playing');\n    setShowCelebration(false);\n  }, [pairs]);\n\n  // Initialize game when component mounts or difficulty changes\n  useEffect(() => {\n    initializeGame();\n  }, [initializeGame]);\n\n  // Timer effect\n  useEffect(() => {\n    let interval = null;\n    if (gameStatus === 'playing') {\n      interval = setInterval(() => {\n        setGameTime(time => time + 1);\n      }, 1000);\n    }\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [gameStatus]);\n\n  // Check for matches when two cards are flipped\n  useEffect(() => {\n    if (flippedCards.length === 2) {\n      const [firstCard, secondCard] = flippedCards;\n      if (firstCard.emoji === secondCard.emoji) {\n        // Match found!\n        setTimeout(() => {\n          setCards(prevCards => prevCards.map(card => card.id === firstCard.id || card.id === secondCard.id ? {\n            ...card,\n            isMatched: true\n          } : card));\n          setMatchedPairs(prev => [...prev, firstCard.emoji]);\n          setFlippedCards([]);\n\n          // Calculate score bonus for match\n          const matchBonus = 100 + timeBonus / Math.max(gameTime, 1);\n          setScore(prevScore => prevScore + Math.round(matchBonus));\n        }, 600);\n      } else {\n        // No match - flip cards back after delay\n        setTimeout(() => {\n          setCards(prevCards => prevCards.map(card => card.id === firstCard.id || card.id === secondCard.id ? {\n            ...card,\n            isFlipped: false\n          } : card));\n          setFlippedCards([]);\n        }, 1000);\n      }\n      setMoves(prevMoves => prevMoves + 1);\n    }\n  }, [flippedCards, gameTime, timeBonus]);\n\n  // Check for game completion\n  useEffect(() => {\n    if (matchedPairs.length === pairs && gameStatus === 'playing') {\n      setGameStatus('completed');\n      setShowCelebration(true);\n\n      // Calculate final score\n      const timePenalty = Math.max(0, gameTime - 60) * 2; // Penalty for time over 1 minute\n      const movesPenalty = Math.max(0, moves - pairs) * 10; // Penalty for extra moves\n      const finalScore = Math.max(100, score - timePenalty - movesPenalty);\n      setScore(finalScore);\n\n      // Save score to localStorage\n      const gameResult = {\n        id: Date.now(),\n        score: finalScore,\n        moves,\n        time: formatTime(gameTime),\n        difficulty,\n        date: new Date().toISOString().split('T')[0]\n      };\n      const existingScores = JSON.parse(localStorage.getItem('memoryGameScores') || '[]');\n      const updatedScores = [...existingScores, gameResult].sort((a, b) => b.score - a.score);\n      localStorage.setItem('memoryGameScores', JSON.stringify(updatedScores));\n\n      // Notify parent component\n      if (onGameComplete) {\n        onGameComplete(gameResult);\n      }\n\n      // Hide celebration after 3 seconds\n      setTimeout(() => setShowCelebration(false), 3000);\n    }\n  }, [matchedPairs.length, pairs, gameStatus, score, gameTime, moves, difficulty, onGameComplete]);\n\n  // Handle card click\n  const handleCardClick = cardId => {\n    if (gameStatus !== 'playing' || flippedCards.length >= 2) return;\n    const clickedCard = cards.find(card => card.id === cardId);\n    if (clickedCard.isFlipped || clickedCard.isMatched) return;\n\n    // Flip the card\n    setCards(prevCards => prevCards.map(card => card.id === cardId ? {\n      ...card,\n      isFlipped: true\n    } : card));\n\n    // Add to flipped cards\n    setFlippedCards(prev => [...prev, clickedCard]);\n  };\n\n  // Format time for display\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Restart game\n  const restartGame = () => {\n    initializeGame();\n  };\n\n  // Pause/Resume game\n  const togglePause = () => {\n    setGameStatus(prev => prev === 'playing' ? 'paused' : 'playing');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memory-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-nav\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"nav-button home-button\",\n        children: \"\\uD83C\\uDFE0 Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/select\",\n        className: \"nav-button select-button\",\n        children: \"\\uD83C\\uDFAF Change Difficulty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Moves\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: moves\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: formatTime(gameTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Difficulty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `stat-value difficulty-${difficulty.toLowerCase()}`,\n            children: difficulty\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button pause-button\",\n          onClick: togglePause,\n          disabled: gameStatus === 'completed',\n          children: gameStatus === 'paused' ? '▶️ Resume' : '⏸️ Pause'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button restart-button\",\n          onClick: restartGame,\n          children: \"\\uD83D\\uDD04 Restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), gameStatus === 'paused' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pause-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Game Paused\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click Resume to continue playing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"resume-large-button\",\n          onClick: togglePause,\n          children: \"\\u25B6\\uFE0F Resume Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this), showCelebration && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"celebration-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"celebration-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD83C\\uDF89 Congratulations! \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You completed the \", difficulty, \" level!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"final-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Final Score: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Moves: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: moves\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Time: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: formatTime(gameTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `cards-grid cards-grid-${pairs}`,\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        onClick: () => handleCardClick(card.id),\n        disabled: gameStatus !== 'playing'\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-progress\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${matchedPairs.length / pairs * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"progress-text\",\n        children: [matchedPairs.length, \" / \", pairs, \" pairs matched\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(MemoryGame, \"G5sXhwhnwIQFj1C7aX7SJp9Mc1E=\", false, function () {\n  return [useParams];\n});\n_c = MemoryGame;\nexport default MemoryGame;\nvar _c;\n$RefreshReg$(_c, \"MemoryGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","Link","Card","jsxDEV","_jsxDEV","MemoryGame","onGameComplete","_s","difficulty","gameConfig","pairs","timeBonus","cardEmojis","cards","setCards","flippedCards","setFlippedCards","matchedPairs","setMatchedPairs","moves","setMoves","score","setScore","gameTime","setGameTime","gameStatus","setGameStatus","showCelebration","setShowCelebration","initializeGame","selectedEmojis","slice","gameCards","map","emoji","index","id","isFlipped","isMatched","sort","Math","random","interval","setInterval","time","clearInterval","length","firstCard","secondCard","setTimeout","prevCards","card","prev","matchBonus","max","prevScore","round","prevMoves","timePenalty","movesPenalty","finalScore","gameResult","Date","now","formatTime","date","toISOString","split","existingScores","JSON","parse","localStorage","getItem","updatedScores","a","b","setItem","stringify","handleCardClick","cardId","clickedCard","find","seconds","mins","floor","secs","toString","padStart","restartGame","togglePause","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","toLowerCase","onClick","disabled","style","width","_c","$RefreshReg$"],"sources":["C:/Users/Christin.Malunes/OneDrive - Rio Tinto/Documents/GitHub/Microsoft-devOps-day/memory-game-app/src/pages/MemoryGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport Card from '../components/Card';\r\nimport './MemoryGame.css';\r\n\r\nconst MemoryGame = ({ onGameComplete }) => {\r\n  const { difficulty = 'Easy' } = useParams();\r\n  // Game configuration based on difficulty\r\n  const gameConfig = {\r\n    'Easy': { pairs: 6, timeBonus: 100 },\r\n    'Medium': { pairs: 8, timeBonus: 150 },\r\n    'Hard': { pairs: 10, timeBonus: 200 }\r\n  };\r\n\r\n  const { pairs, timeBonus } = gameConfig[difficulty];\r\n\r\n  // Emoji sets for cards\r\n  const cardEmojis = ['🌟', '🎯', '🚀', '🎨', '🏆', '💎', '🎪', '🎭', '🎸', '🎲', '🎊', '🎁', '🌈', '⚡', '🔥'];\r\n\r\n  // Game state\r\n  const [cards, setCards] = useState([]);\r\n  const [flippedCards, setFlippedCards] = useState([]);\r\n  const [matchedPairs, setMatchedPairs] = useState([]);\r\n  const [moves, setMoves] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [gameTime, setGameTime] = useState(0);\r\n  const [gameStatus, setGameStatus] = useState('playing'); // 'playing', 'paused', 'completed'\r\n  const [showCelebration, setShowCelebration] = useState(false);\r\n\r\n  // Initialize game\r\n  const initializeGame = useCallback(() => {\r\n    const selectedEmojis = cardEmojis.slice(0, pairs);\r\n    const gameCards = [...selectedEmojis, ...selectedEmojis]\r\n      .map((emoji, index) => ({\r\n        id: index,\r\n        emoji,\r\n        isFlipped: false,\r\n        isMatched: false\r\n      }))\r\n      .sort(() => Math.random() - 0.5); // Shuffle cards\r\n\r\n    setCards(gameCards);\r\n    setFlippedCards([]);\r\n    setMatchedPairs([]);\r\n    setMoves(0);\r\n    setScore(0);\r\n    setGameTime(0);\r\n    setGameStatus('playing');\r\n    setShowCelebration(false);\r\n  }, [pairs]);\r\n\r\n  // Initialize game when component mounts or difficulty changes\r\n  useEffect(() => {\r\n    initializeGame();\r\n  }, [initializeGame]);\r\n\r\n  // Timer effect\r\n  useEffect(() => {\r\n    let interval = null;\r\n    if (gameStatus === 'playing') {\r\n      interval = setInterval(() => {\r\n        setGameTime(time => time + 1);\r\n      }, 1000);\r\n    }\r\n    return () => {\r\n      if (interval) clearInterval(interval);\r\n    };\r\n  }, [gameStatus]);\r\n\r\n  // Check for matches when two cards are flipped\r\n  useEffect(() => {\r\n    if (flippedCards.length === 2) {\r\n      const [firstCard, secondCard] = flippedCards;\r\n      \r\n      if (firstCard.emoji === secondCard.emoji) {\r\n        // Match found!\r\n        setTimeout(() => {\r\n          setCards(prevCards =>\r\n            prevCards.map(card =>\r\n              card.id === firstCard.id || card.id === secondCard.id\r\n                ? { ...card, isMatched: true }\r\n                : card\r\n            )\r\n          );\r\n          setMatchedPairs(prev => [...prev, firstCard.emoji]);\r\n          setFlippedCards([]);\r\n          \r\n          // Calculate score bonus for match\r\n          const matchBonus = 100 + (timeBonus / Math.max(gameTime, 1));\r\n          setScore(prevScore => prevScore + Math.round(matchBonus));\r\n        }, 600);\r\n      } else {\r\n        // No match - flip cards back after delay\r\n        setTimeout(() => {\r\n          setCards(prevCards =>\r\n            prevCards.map(card =>\r\n              card.id === firstCard.id || card.id === secondCard.id\r\n                ? { ...card, isFlipped: false }\r\n                : card\r\n            )\r\n          );\r\n          setFlippedCards([]);\r\n        }, 1000);\r\n      }\r\n      \r\n      setMoves(prevMoves => prevMoves + 1);\r\n    }\r\n  }, [flippedCards, gameTime, timeBonus]);\r\n\r\n  // Check for game completion\r\n  useEffect(() => {\r\n    if (matchedPairs.length === pairs && gameStatus === 'playing') {\r\n      setGameStatus('completed');\r\n      setShowCelebration(true);\r\n      \r\n      // Calculate final score\r\n      const timePenalty = Math.max(0, gameTime - 60) * 2; // Penalty for time over 1 minute\r\n      const movesPenalty = Math.max(0, moves - pairs) * 10; // Penalty for extra moves\r\n      const finalScore = Math.max(100, score - timePenalty - movesPenalty);\r\n      \r\n      setScore(finalScore);\r\n\r\n      // Save score to localStorage\r\n      const gameResult = {\r\n        id: Date.now(),\r\n        score: finalScore,\r\n        moves,\r\n        time: formatTime(gameTime),\r\n        difficulty,\r\n        date: new Date().toISOString().split('T')[0]\r\n      };\r\n\r\n      const existingScores = JSON.parse(localStorage.getItem('memoryGameScores') || '[]');\r\n      const updatedScores = [...existingScores, gameResult].sort((a, b) => b.score - a.score);\r\n      localStorage.setItem('memoryGameScores', JSON.stringify(updatedScores));\r\n\r\n      // Notify parent component\r\n      if (onGameComplete) {\r\n        onGameComplete(gameResult);\r\n      }\r\n\r\n      // Hide celebration after 3 seconds\r\n      setTimeout(() => setShowCelebration(false), 3000);\r\n    }\r\n  }, [matchedPairs.length, pairs, gameStatus, score, gameTime, moves, difficulty, onGameComplete]);\r\n\r\n  // Handle card click\r\n  const handleCardClick = (cardId) => {\r\n    if (gameStatus !== 'playing' || flippedCards.length >= 2) return;\r\n\r\n    const clickedCard = cards.find(card => card.id === cardId);\r\n    if (clickedCard.isFlipped || clickedCard.isMatched) return;\r\n\r\n    // Flip the card\r\n    setCards(prevCards =>\r\n      prevCards.map(card =>\r\n        card.id === cardId\r\n          ? { ...card, isFlipped: true }\r\n          : card\r\n      )\r\n    );\r\n\r\n    // Add to flipped cards\r\n    setFlippedCards(prev => [...prev, clickedCard]);\r\n  };\r\n\r\n  // Format time for display\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  // Restart game\r\n  const restartGame = () => {\r\n    initializeGame();\r\n  };\r\n\r\n  // Pause/Resume game\r\n  const togglePause = () => {\r\n    setGameStatus(prev => prev === 'playing' ? 'paused' : 'playing');\r\n  };\r\n\r\n  return (\r\n    <div className=\"memory-game\">\r\n      <div className=\"game-nav\">\r\n        <Link to=\"/\" className=\"nav-button home-button\">\r\n          🏠 Home\r\n        </Link>\r\n        <Link to=\"/select\" className=\"nav-button select-button\">\r\n          🎯 Change Difficulty\r\n        </Link>\r\n      </div>\r\n      \r\n      <div className=\"game-header\">\r\n        <div className=\"game-stats\">\r\n          <div className=\"stat-item\">\r\n            <span className=\"stat-label\">Score</span>\r\n            <span className=\"stat-value\">{score}</span>\r\n          </div>\r\n          <div className=\"stat-item\">\r\n            <span className=\"stat-label\">Moves</span>\r\n            <span className=\"stat-value\">{moves}</span>\r\n          </div>\r\n          <div className=\"stat-item\">\r\n            <span className=\"stat-label\">Time</span>\r\n            <span className=\"stat-value\">{formatTime(gameTime)}</span>\r\n          </div>\r\n          <div className=\"stat-item\">\r\n            <span className=\"stat-label\">Difficulty</span>\r\n            <span className={`stat-value difficulty-${difficulty.toLowerCase()}`}>\r\n              {difficulty}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"game-controls\">\r\n          <button \r\n            className=\"control-button pause-button\" \r\n            onClick={togglePause}\r\n            disabled={gameStatus === 'completed'}\r\n          >\r\n            {gameStatus === 'paused' ? '▶️ Resume' : '⏸️ Pause'}\r\n          </button>\r\n          <button \r\n            className=\"control-button restart-button\" \r\n            onClick={restartGame}\r\n          >\r\n            🔄 Restart\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {gameStatus === 'paused' && (\r\n        <div className=\"game-overlay\">\r\n          <div className=\"pause-message\">\r\n            <h2>Game Paused</h2>\r\n            <p>Click Resume to continue playing</p>\r\n            <button className=\"resume-large-button\" onClick={togglePause}>\r\n              ▶️ Resume Game\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {showCelebration && (\r\n        <div className=\"celebration-overlay\">\r\n          <div className=\"celebration-content\">\r\n            <h1>🎉 Congratulations! 🎉</h1>\r\n            <p>You completed the {difficulty} level!</p>\r\n            <div className=\"final-stats\">\r\n              <div>Final Score: <strong>{score}</strong></div>\r\n              <div>Moves: <strong>{moves}</strong></div>\r\n              <div>Time: <strong>{formatTime(gameTime)}</strong></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className={`cards-grid cards-grid-${pairs}`}>\r\n        {cards.map(card => (\r\n          <Card\r\n            key={card.id}\r\n            card={card}\r\n            onClick={() => handleCardClick(card.id)}\r\n            disabled={gameStatus !== 'playing'}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"game-progress\">\r\n        <div className=\"progress-bar\">\r\n          <div \r\n            className=\"progress-fill\" \r\n            style={{ width: `${(matchedPairs.length / pairs) * 100}%` }}\r\n          ></div>\r\n        </div>\r\n        <span className=\"progress-text\">\r\n          {matchedPairs.length} / {pairs} pairs matched\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemoryGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}